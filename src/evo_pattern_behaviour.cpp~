#include "ros/ros.h"
#include "std_msgs/Float64.h"
#include "std_msgs/Float64MultiArray.h"

#include <stdio.h>
#include <string>

using namespace std;

// Global variables
bool zoneA = false;
bool zoneB = false;
bool zoneC = false;
bool zoneD = false;
bool zoneE = false;

float angWidthCenter = 25.;
float angWidthSide = 10.0;

string chromosome = "0ENESENEW0W0W0000000000000000000";
float formationNormal = 0.;
float formationPerp = 90.;

void BlobBearingsCallback(const std_msgs::Float64MultiArray::ConstPtr& msg){

  // Reset visual zone flags
  zoneA = false;
  zoneB = false;
  zoneC = false;
  zoneD = false;
  zoneE = false;
  
  // Get number of blobs detected
  int nBlobs = msg->data.size();

  for(int i = 0; i < nBlobs; i++){
    float blobBearing = fabs(msg->data[i]);

    if(blobBearing < angWidthCenter) 
      zoneA = true;
    else if(blobBearing < 90. - angWidthSide/2.)
      zoneB = true;
    else if(blobBearing < 90. + angWidthSide/2.)
      zoneE = true;
    else if(blobBearing < 180. - angWidthCenter)
      zoneC = true;
    else
      zoneD = true;
  }
}

int main(int argc, char **argv){
  ros::init(argc, argv, "evo_pattern_formation");

  ros::NodeHandle n;
 
  ros::Publisher heading_pub = n.advertise<std_msgs::Float64>("targetHeading", 1000);
  ros::Publisher linearVel_pub = n.advertise<std_msgs::Float64>("targetLinearVelocity", 1000);

  ros::Subscriber currentHeadingSub = n.subscribe("blobBearings", 1000, BlobBearingsCallback);  

  ros::Rate loop_rate(10);

  bool keepGoing = true;
  
  while (ros::ok() and keepGoing){
    
    std_msgs::Float64 headingMsg;
    std_msgs::Float64 linearVelMsg;

    float heading;
    float linearVel;
        
    int cmdIndex = 0;
    
    if(zoneA) cmdIndex += 1;
    if(zoneB) cmdIndex += 2;
    if(zoneC) cmdIndex += 4;
    if(zoneD) cmdIndex += 8;
    //if(zoneE) cmdIndex += 16;

    char cmd = chromosome[ cmdIndex ];

    if(cmd == 'N'){
      heading = formationNormal;
      linearVel = 1.;
    }
    else if(cmd == 'E'){
      heading = formationPerp;
      linearVel = 1.;
    }
    else if(cmd == 'S'){
      heading = formationNormal + 180.;
      linearVel = 1.;
    }
    else if(cmd == 'W'){
      heading = formationPerp - 180.;
      linearVel = 1.;
    }
    else{
      heading = formationNormal;
      linearVel = 0.;
    }
    
    
    
    // deal with issues arising from driving "south"
    if( heading > 170.) heading = 170.;
    if( heading <-170.) heading = -170.;

    
    headingMsg.data = heading;
    linearVelMsg.data = linearVel;

    heading_pub.publish(headingMsg);
    linearVel_pub.publish(linearVelMsg);

    printf("zoneA: %d\tzoneB: %d\tzoneC: %d\tzoneD: %d\tzoneE: %d\n~~~~~~~~~~~~~~\n", zoneA, zoneB, zoneC, zoneD, zoneE);
    

    
    ros::spinOnce();

    loop_rate.sleep();
  }


  return 0;
}
